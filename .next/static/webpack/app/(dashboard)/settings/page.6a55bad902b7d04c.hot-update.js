"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/settings/page",{

/***/ "(app-pages-browser)/./data/cards.ts":
/*!***********************!*\
  !*** ./data/cards.ts ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   seedCards: function() { return /* binding */ seedCards; }\n/* harmony export */ });\nconst seedCards = [\n    {\n        id: \"amex-platinum\",\n        name: \"American Express Platinum\",\n        issuer: \"American Express\",\n        annualFee: 695,\n        summary: \"Premium travel and lifestyle statement credits refreshed for 2025, optimized for quarterly and annual usage.\",\n        perks: [\n            {\n                id: \"amex-resy\",\n                cardId: \"amex-platinum\",\n                title: \"Resy Dining Credit\",\n                description: \"$25 statement credit each month at select Resy partners.\",\n                cashValue: 300,\n                cadence: \"monthly\",\n                resetAnchor: \"calendar-year\",\n                tags: [\n                    \"dining\",\n                    \"statement-credit\"\n                ],\n                terms: \"Enroll via benefits dashboard. Credit resets monthly and unused value does not roll over.\",\n                enabledByDefault: true\n            },\n            {\n                id: \"amex-saks\",\n                cardId: \"amex-platinum\",\n                title: \"Saks Fifth Avenue Credit\",\n                description: \"$50 credit January–June and July–December for eligible Saks purchases.\",\n                cashValue: 100,\n                cadence: \"semiannual\",\n                resetAnchor: \"calendar-year-split\",\n                tags: [\n                    \"shopping\",\n                    \"statement-credit\"\n                ],\n                terms: \"Enrollment required. Cannot combine across halves of the year.\",\n                enabledByDefault: true\n            },\n            {\n                id: \"amex-uber\",\n                cardId: \"amex-platinum\",\n                title: \"Uber Cash\",\n                description: \"$15 monthly Uber Cash plus $20 bonus in December.\",\n                cashValue: 200,\n                cadence: \"monthly\",\n                resetAnchor: \"calendar-month\",\n                tags: [\n                    \"transportation\",\n                    \"dining\"\n                ],\n                terms: \"Requires linking card to Uber account; applies to rides and eats in the U.S.\",\n                enabledByDefault: true\n            },\n            {\n                id: \"amex-digital-entertainment\",\n                cardId: \"amex-platinum\",\n                title: \"Digital Entertainment Credit\",\n                description: \"$20 monthly credit for select streaming services.\",\n                cashValue: 240,\n                cadence: \"monthly\",\n                resetAnchor: \"calendar-month\",\n                tags: [\n                    \"entertainment\"\n                ],\n                terms: \"Enrollment required. Participating platforms subject to change.\",\n                enabledByDefault: true\n            }\n        ]\n    },\n    {\n        id: \"csr\",\n        name: \"Chase Sapphire Reserve\",\n        issuer: \"Chase\",\n        annualFee: 795,\n        summary: \"Post-refresh Sapphire Reserve with $2,340 in reliable annual credits spanning travel, dining, experiences, and wellness.\",\n        perks: [\n            {\n                id: \"csr-travel-credit\",\n                cardId: \"csr\",\n                title: \"Annual Travel Credit\",\n                description: \"Automatic travel statement credits that reset each cardmember anniversary year.\",\n                cashValue: 300,\n                cadence: \"annual\",\n                resetAnchor: \"card-anniversary\",\n                tags: [\n                    \"travel\",\n                    \"statement-credit\"\n                ],\n                terms: \"No enrollment required. Applies automatically to most travel categories until the $300 cap is met.\",\n                enabledByDefault: true\n            },\n            {\n                id: \"csr-edit-hotel-credit\",\n                cardId: \"csr\",\n                title: \"The Edit Hotel Credit\",\n                description: \"$500 credit toward prepaid stays at The Edit; transitions to an annual lump sum starting in 2026.\",\n                cashValue: 500,\n                cadence: \"annual\",\n                resetAnchor: \"calendar-year\",\n                tags: [\n                    \"travel\",\n                    \"statement-credit\",\n                    \"hotel\"\n                ],\n                terms: \"Requires a minimum two-night prepaid booking through The Edit. Credit expected to become an annual $500 lump sum in 2026.\",\n                enabledByDefault: true\n            },\n            {\n                id: \"csr-exclusive-dining\",\n                cardId: \"csr\",\n                title: \"Exclusive Dining Credit\",\n                description: \"$150 dining credit January–June and another $150 July–December at eligible partners.\",\n                cashValue: 300,\n                cadence: \"semiannual\",\n                resetAnchor: \"calendar-year-split\",\n                tags: [\n                    \"dining\",\n                    \"statement-credit\"\n                ],\n                terms: \"Enrollment required. Credits issued twice per calendar year and do not roll over.\",\n                enabledByDefault: true\n            },\n            {\n                id: \"csr-stubhub-viagogo\",\n                cardId: \"csr\",\n                title: \"StubHub & Viagogo Credit\",\n                description: \"$150 credit January–June and another $150 July–December for eligible event ticket purchases.\",\n                cashValue: 300,\n                cadence: \"semiannual\",\n                resetAnchor: \"calendar-year-split\",\n                tags: [\n                    \"entertainment\",\n                    \"statement-credit\"\n                ],\n                terms: \"Use-it-or-lose-it credits that require purchases through StubHub or Viagogo within each half of the year.\",\n                enabledByDefault: true\n            },\n            {\n                id: \"csr-doordash-dashpass\",\n                cardId: \"csr\",\n                title: \"DoorDash Credits & DashPass\",\n                description: \"$25 in monthly DoorDash credits plus complimentary DashPass membership (estimated $120 value).\",\n                cashValue: 420,\n                cadence: \"monthly\",\n                resetAnchor: \"calendar-month\",\n                tags: [\n                    \"dining\",\n                    \"subscription\"\n                ],\n                terms: \"Credits expire monthly. DashPass enrollment required and membership value estimated at $120 annually.\",\n                enabledByDefault: true\n            },\n            {\n                id: \"csr-apple-subscriptions\",\n                cardId: \"csr\",\n                title: \"Apple Subscriptions Credit\",\n                description: \"$250 in statement credits toward Apple subscription purchases through June 2027.\",\n                cashValue: 250,\n                cadence: \"annual\",\n                resetAnchor: \"calendar-year\",\n                tags: [\n                    \"entertainment\",\n                    \"statement-credit\"\n                ],\n                terms: \"Enrollment required. Benefit scheduled to run through June 2027 and may require purchases to be billed directly by Apple.\",\n                enabledByDefault: true\n            },\n            {\n                id: \"csr-trusted-traveler\",\n                cardId: \"csr\",\n                title: \"Global Entry / TSA PreCheck / NEXUS\",\n                description: \"$100 reimbursement every four years for a trusted traveler application, annualized at $30.\",\n                cashValue: 30,\n                cadence: \"annual\",\n                resetAnchor: \"calendar-year\",\n                tags: [\n                    \"travel\"\n                ],\n                terms: \"Receive up to $100 in statement credits once every four years. Tracked here as $30 per year for planning purposes.\",\n                enabledByDefault: true\n            },\n            {\n                id: \"csr-lyft-credit\",\n                cardId: \"csr\",\n                title: \"Lyft Monthly Credit\",\n                description: \"$10 monthly Lyft credit plus continued access to Lyft Pink benefits.\",\n                cashValue: 120,\n                cadence: \"monthly\",\n                resetAnchor: \"calendar-month\",\n                tags: [\n                    \"transportation\",\n                    \"statement-credit\"\n                ],\n                terms: \"Credits expire monthly. Lyft Pink enrollment required and benefit subject to Lyft program changes.\",\n                enabledByDefault: true\n            },\n            {\n                id: \"csr-peloton-credit\",\n                cardId: \"csr\",\n                title: \"Peloton App Credit\",\n                description: \"$10 monthly statement credit for Peloton App membership through 2027.\",\n                cashValue: 120,\n                cadence: \"monthly\",\n                resetAnchor: \"calendar-month\",\n                tags: [\n                    \"fitness\",\n                    \"subscription\"\n                ],\n                terms: \"Enrollment required. Credit currently scheduled through 2027 and expires if unused each month.\",\n                enabledByDefault: true\n            }\n        ]\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data/cards.ts\n"));

/***/ })

});